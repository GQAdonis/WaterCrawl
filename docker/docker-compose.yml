x-app: &app
  build:
    context: ../backend
    dockerfile: ../backend/Dockerfile
    args:
      - APP_VERSION=${VERSION:-development}
  env_file:
    - ../backend/.env
  depends_on:
    db:
      condition: service_healthy
  profiles:
    - dev


x-frontend: &frontend
  build:
    context: ../frontend
    dockerfile: ../frontend/Dockerfile
    args:
      - VITE_VERSION=${VERSION:-development}
  env_file:
    - ../frontend/.env
  depends_on:
    - app
  profiles:
    - dev

services:
  app:
    <<: *app
    command: [ "gunicorn","-b", "0.0.0.0:9000", "-w",  "2", "watercrawl.wsgi:application", "--access-logfile", "-", "--error-logfile", "-", "--timeout", "60" ]
    ports:
      - "127.0.0.1:8000:9000"

  celery:
    <<: *app
    command: [ "celery", "-A", "watercrawl", "worker", "-l", "info", "-B", "-S", "django" ]

  frontend:
    <<: *frontend
    command: [ "npm", "run", "serve" ]
    ports:
      - "127.0.0.1:3000:80"

  minio:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    restart: always
    volumes:
      - ./volumes/minio-data:/data
    command: server /data --console-address ":9001"
    env_file:
      - minio.env
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"

  playwright:
    image: watercrawl/playwright:1.1
    restart: always
    user: root
    env_file:
      - playwright.env
    ports:
      - "127.0.0.1:8800:8000"

  db:
    image: postgres:17.2-alpine3.21
    restart: always
    env_file:
      - db.env
    volumes:
      - ./volumes/postgres-db:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    restart: always
    ports:
      - "127.0.0.1:6379:6379"

  mailpit:
    image: axllent/mailpit
    platform: linux/amd64
    ports:
      - "2525:1025"
      - "8025:8025"
    profiles:
      - dev
      - local
